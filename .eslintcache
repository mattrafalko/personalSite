[{"/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/index.js":"1","/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/App.js":"2","/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/AboutMe.js":"3","/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/Github/GithubProj.js":"4","/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/Resume/Resume.js":"5","/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/Resume/ResumeItem.js":"6","/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/Github/Github.js":"7","/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/Contact.js":"8"},{"size":219,"mtime":1609084494243,"results":"9","hashOfConfig":"10"},{"size":493,"mtime":1610225193806,"results":"11","hashOfConfig":"10"},{"size":1502,"mtime":1610226776286,"results":"12","hashOfConfig":"10"},{"size":684,"mtime":1610226743050,"results":"13","hashOfConfig":"10"},{"size":1388,"mtime":1610225355106,"results":"14","hashOfConfig":"10"},{"size":491,"mtime":1609123378366,"results":"15","hashOfConfig":"10"},{"size":914,"mtime":1610225508814,"results":"16","hashOfConfig":"10"},{"size":931,"mtime":1610223779050,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rml5xl",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/index.js",[],"/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/App.js",[],"/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/AboutMe.js",["34","35"],"/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/Github/GithubProj.js",["36"],"/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/Resume/Resume.js",[],"/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/Resume/ResumeItem.js",[],"/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/pages/Github/Github.js",["37"],"/Users/mattrafalko/Desktop/webdev2020/mattrafalko/src/components/Contact.js",["38","39"],{"ruleId":"40","severity":1,"message":"41","line":7,"column":13,"nodeType":"42","endLine":12,"endColumn":4},{"ruleId":"43","severity":1,"message":"44","line":37,"column":13,"nodeType":"45","endLine":40,"endColumn":15},{"ruleId":"46","severity":1,"message":"47","line":6,"column":34,"nodeType":"48","endLine":6,"endColumn":49},{"ruleId":"40","severity":1,"message":"41","line":13,"column":13,"nodeType":"42","endLine":17,"endColumn":4},{"ruleId":"46","severity":1,"message":"47","line":17,"column":56,"nodeType":"48","endLine":17,"endColumn":71},{"ruleId":"46","severity":1,"message":"47","line":22,"column":58,"nodeType":"48","endLine":22,"endColumn":73},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute"]