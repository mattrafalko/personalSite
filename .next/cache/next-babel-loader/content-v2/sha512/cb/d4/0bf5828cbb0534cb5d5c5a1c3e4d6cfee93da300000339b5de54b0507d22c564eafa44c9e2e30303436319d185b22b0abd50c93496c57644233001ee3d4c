{"ast":null,"code":"import axios from 'axios';\nexport const getGithubUserData = async () => {\n  return await axios.get(`https://api.github.com/users/mattrafalko?client_id=${process.env.REACT_APP_GITHUB_CLIENTID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENTSECRET}`);\n};\nexport const getGithubProjectdata = async () => {\n  const projects = await axios.get(`https://api.github.com/users/mattrafalko/repos?per_page=50&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENTID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENTSECRET}`);\n  let filtered = projects.data.filter(x => x.fork === false);\n  return filtered;\n};","map":{"version":3,"sources":["/Users/mattrafalko/Desktop/webdev2020/mattrafalko/context/UserData.js"],"names":["axios","getGithubUserData","get","process","env","REACT_APP_GITHUB_CLIENTID","REACT_APP_GITHUB_CLIENTSECRET","getGithubProjectdata","projects","filtered","data","filter","x","fork"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,YAAY;AAC3C,SAAO,MAAMD,KAAK,CAACE,GAAN,CACV,sDAAqDC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,6BAA8B,EAD5I,CAAb;AAGD,CAJM;AAMP,OAAO,MAAMC,oBAAoB,GAAG,YAAY;AAC9C,QAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACE,GAAN,CACpB,yFAAwFC,OAAO,CAACC,GAAR,CAAYC,yBAA0B,kBAAiBF,OAAO,CAACC,GAAR,CAAYE,6BAA8B,EADrK,CAAvB;AAGA,MAAIG,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAsBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,KAAvC,CAAf;AACA,SAAOJ,QAAP;AACD,CANM","sourcesContent":["import axios from 'axios';\n\nexport const getGithubUserData = async () => {\n  return await axios.get(\n    `https://api.github.com/users/mattrafalko?client_id=${process.env.REACT_APP_GITHUB_CLIENTID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENTSECRET}`\n  );\n};\n\nexport const getGithubProjectdata = async () => {\n  const projects = await axios.get(\n    `https://api.github.com/users/mattrafalko/repos?per_page=50&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENTID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENTSECRET}`\n  );\n  let filtered = projects.data.filter((x) => x.fork === false);\n  return filtered;\n};\n"]},"metadata":{},"sourceType":"module"}